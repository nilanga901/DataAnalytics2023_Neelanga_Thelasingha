temp<-(28,30.5,32,31.2,29.3,27.9,26.4)
days<-c('Mon','Tue','Wed','Thur','Fri','Sat','Sun')
temp<-c(28,30.5,32,31.2,29.3,27.9,26.4)
snowed<-c('T','T','F','F','T','F')
help("data.frame")
RPI_Weather_Week<-data.frame(days,temp,snowed)
RPI_Weather_Week <- data.frame(days,temp,snowed)
snowed<-c('T','T','F','F','T,'T','F')
RPI_Weather_Week <- data.frame(days,temp,snowed)
snowed<-c('T','T','F','F','T','T','F')
help("data.frame")
RPI_Weather_Week <- data.frame(days,temp,snowed)
RPI_Weather_Week
head(RPI_Weather_Week)
str(RPI_Weather_Week)
summary(RPI_Weather_Week)
RPI_Weather_Week[1,]
RPI_Weather_Week[,1]
RPI_Weather_Week[,'snowed']
RPI_Weather_Week[,'temp']
RPI_Weather_Week[,'days']
RPI_Weather_Week[1:5,c('days','temp')]
RPI_Weather_Week$temp
subset(RPI_Weather_Week,subset=snowed==True)
sorted.snowed<-order(RPI_Weather_Week['snowed'])
sorted.snowed<-order(RPI_Weather_Week[,'snowed'])
sorted.snowed
RPI_Weather_Week[sorted.snowed,]
setwd("C:/Users/nilan/OneDrive - Rensselaer Polytechnic Institute/RPI/My Acadamic/Data Analaytics/DataAnalytics2023_Neelanga_Thelasingha/lab0/EPI/EPI/")
EPI_data<-read.csv("2010EPI_data.csv",header=T,skip = 1)
setwd("C:/Users/nilan/OneDrive - Rensselaer Polytechnic Institute/RPI/My Acadamic/Data Analaytics/DataAnalytics2023_Neelanga_Thelasingha/lab1/EPI/")
EPI_data<-read.csv("2010EPI_data.csv",header=T,skip = 1)
#or
#EPI_data <- read.xlsx(”<path>/2010EPI_data.xlsx")
# Note: replace default data frame name – cannot start with numbers!
View(EPI_data)
#
attach(EPI_data) 	# sets the ‘default’ object
fix(EPI_data) 	# launches a simple data editor
EPI 			# prints out values EPI_data$EPI
tf <- is.na(EPI) # records True values if the value is NA
tf <- is.na(EPI) # records True values if the value is NA
tf
E <- EPI[!tf] # filters out NA values, new array
setwd("C:/Users/nilan/OneDrive - Rensselaer Polytechnic Institute/RPI/My Acadamic/Data Analaytics/DataAnalytics2023_Neelanga_Thelasingha/lab1/EPI/")
EPI_data<-read.csv("2010EPI_data.csv",header=T,skip = 1)
#or
#EPI_data <- read.xlsx(”<path>/2010EPI_data.xlsx")
# Note: replace default data frame name – cannot start with numbers!
View(EPI_data)
#
attach(EPI_data) 	# sets the ‘default’ object
fix(EPI_data) 	# launches a simple data editor
EPI 			# prints out values EPI_data$EPI
tf <- is.na(EPI) # records True values if the value is NA
E <- EPI[!tf] # filters out NA values, new array
E <- EPI[!tf] # filters out NA values, new array
View(E)
summary(EPI) 	# stats
fivenum(EPI,na.rm=TRUE)
help(stem)
stem(EPI)		 # stem and leaf plot
stem(EPI)		 # stem and leaf plot
help(hist)
hist(EPI)
hist(EPI, seq(30., 95., 1.0), prob=TRUE)
help(lines)
lines(density(EPI,na.rm=TRUE,bw=1.)) # or try bw=“SJ”
help(rug)
rug(EPI)
help(stem)
help(hist)
help(lines)
lines(density(EPI,na.rm=TRUE,bw=1.)) # or try bw=“SJ”
stem(EPI)		 # stem and leaf plot
help(hist)
hist(EPI)
hist(EPI, seq(30., 95., 1.0), prob=TRUE)
help(lines)
lines(density(EPI,na.rm=TRUE,bw=1.)) # or try bw=“SJ”
hist(EPI)
hist(EPI, seq(30., 95., 1.0), prob=TRUE)
help(lines)
lines(density(EPI,na.rm=TRUE,bw=1.)) # or try bw=“SJ”
help(rug)
rug(EPI)
EPI_data<-read.csv("2010EPI_data.csv",header=T)
#or
#EPI_data <- read.xlsx(”<path>/2010EPI_data.xlsx")
# Note: replace default data frame name – cannot start with numbers!
View(EPI_data)
#
attach(EPI_data) 	# sets the ‘default’ object
fix(EPI_data) 	# launches a simple data editor
EPI 			# prints out values EPI_data$EPI
tf <- is.na(EPI) # records True values if the value is NA
E <- EPI[!tf] # filters out NA values, new array
View(E)
summary(EPI) 	# stats
fivenum(EPI,na.rm=TRUE)
help(stem)
stem(EPI)		 # stem and leaf plot
help(hist)
hist(EPI)
hist(EPI, seq(30., 95., 1.0), prob=TRUE)
help(lines)
lines(density(EPI,na.rm=TRUE,bw=1.)) # or try bw=“SJ”
help(rug)
rug(EPI)
EPI_data<-read.csv("2010EPI_data.csv",header=T)
#EPI_data<-read.csv("2010EPI_data.csv",header=T,skip = 1)
#or
#EPI_data <- read.xlsx(”<path>/2010EPI_data.xlsx")
# Note: replace default data frame name – cannot start with numbers!
View(EPI_data)
#
attach(EPI_data) 	# sets the ‘default’ object
fix(EPI_data) 	# launches a simple data editor
EPI 			# prints out values EPI_data$EPI
tf <- is.na(EPI) # records True values if the value is NA
E <- EPI[!tf] # filters out NA values, new array
View(E)
summary(EPI) 	# stats
fivenum(EPI,na.rm=TRUE)
help(stem)
stem(EPI)		 # stem and leaf plot
help(hist)
hist(EPI)
hist(EPI, seq(30., 95., 1.0), prob=TRUE)
help(lines)
lines(density(EPI,na.rm=TRUE,bw=1.)) # or try bw=“SJ”
help(rug)
rug(EPI)
#Cumulative Density Function
plot(ecdf(EPI), do.points=FALSE, verticals=TRUE)
#Quantile-Quantile?
par(pty="s")
qqnorm(EPI); qqline(EPI)
#Cumulative Density Function
plot(ecdf(EPI), do.points=FALSE, verticals=TRUE)
#Quantile-Quantile?
par(pty="s")
qqnorm(EPI); qqline(EPI)
#Simulated data from t-distribution:
x <- rt(250, df = 5)
qqnorm(x); qqline(x)
help rr
help rt
help(rt)
#Simulated data from t-distribution:
x <- rt(250, df = 5)
qqnorm(x); qqline(x)
#Make a Q-Q plot against the generating distribution by: x<-seq(30,95,1)
qqplot(qt(ppoints(250), df = 5), x, xlab = "Q-Q plot for t dsn")
qqnorm(x); qqline(x)
#Make a Q-Q plot against the generating distribution by: x<-seq(30,95,1)
qqplot(qt(ppoints(250), df = 5), x, xlab = "Q-Q plot for t dsn")
#Make a Q-Q plot against the generating distribution by: x<-seq(30,95,1)
qqplot(qt(ppoints(250), df = 5), x, xlab = "Q-Q plot for t dsn")
qqline(x)
help(distributions)
# try different ones.....
# try different ones.....
help(distributions)
# try different ones.....
#Landlock
EPILand<-EPI[!Landlock]
Eland <- EPILand[!is.na(EPILand)]
#
hist(ELand)
#
hist(ELand)
Eland <- EPILand[!is.na(EPILand)]
#
hist(ELand)
#
hist(Eland)
hist(Eland, seq(30., 95., 1.0), prob=TRUE)
boxplot(EPI,DALY)
qqplot(EPI,DALY)
boxplot(EPI,ENVHEALTH, ECOSYSTEM, DALY, AIR_H,WATER_H, AIR_EWATER_E,BIODIVERSITY)
names()
names(EPI)
boxplot(EPI,ENVHEALTH, ECOSYSTEM, DALY, AIR_H,WATER_H, AIR_E,WATER_E,BIODIVERSITY)
qqplot(EPI,ENVHEALTH, ECOSYSTEM, DALY, AIR_H,WATER_H, AIR_E,WATER_E,BIODIVERSITY)
qqplot(EPI,ENVHEALTH, ECOSYSTEM, DALY, AIR_H,WATER_H, AIR_E,WATER_E,BIODIVERSITY)
qqplot(EPI,WATER_H)
qqplot(EPI, AIR_E)
qqplot(EPI,WATER_E)
qqplot(EPI,BIODIVERSITY)
boxplot(EPI,ENVHEALTH, ECOSYSTEM, DALY, AIR_H,WATER_H, AIR_E,WATER_E,BIODIVERSITY)
help(boxplot)
source("C:/Users/nilan/OneDrive - Rensselaer Polytechnic Institute/RPI/My Acadamic/Data Analaytics/DataAnalytics2023_Neelanga_Thelasingha/lab1/lab1_EPI.R")
#EPI_data<-read.csv("2010EPI_data.csv",header=T)
EPI_data<-read.csv("2010EPI_data.csv",header=T,skip = 1)
#or
#EPI_data <- read.xlsx(”<path>/2010EPI_data.xlsx")
# Note: replace default data frame name – cannot start with numbers!
View(EPI_data)
#
attach(EPI_data) 	# sets the ‘default’ object
fix(EPI_data) 	# launches a simple data editor
EPI 			# prints out values EPI_data$EPI
tf <- is.na(EPI) # records True values if the value is NA
E <- EPI[!tf] # filters out NA values, new array
View(E)
summary(EPI) 	# stats
fivenum(EPI,na.rm=TRUE)
help(stem)
stem(EPI)		 # stem and leaf plot
help(hist)
hist(EPI)
hist(EPI, seq(30., 95., 1.0), prob=TRUE)
help(lines)
lines(density(EPI,na.rm=TRUE,bw=1.)) # or try bw=“SJ”
help(rug)
rug(EPI)
#Cumulative Density Function
plot(ecdf(EPI), do.points=FALSE, verticals=TRUE)
stem(EPI)		 # stem and leaf plot
help(hist)
hist(EPI)
hist(EPI, seq(30., 95., 1.0), prob=TRUE)
help(lines)
lines(density(EPI,na.rm=TRUE,bw=1.)) # or try bw=“SJ”
help(rug)
rug(EPI)
#Cumulative Density Function
plot(ecdf(EPI), do.points=FALSE, verticals=TRUE)
#Quantile-Quantile?
par(pty="s")
qqnorm(EPI); qqline(EPI)
#Simulated data from t-distribution:
x <- rt(250, df = 5)
qqnorm(x); qqline(x)
#Make a Q-Q plot against the generating distribution by: x<-seq(30,95,1)
qqplot(qt(ppoints(250), df = 5), x, xlab = "Q-Q plot for t dsn")
qqline(x)
boxplot(EPI,DALY)
qqplot(EPI,DALY)
boxplot(EPI,ENVHEALTH, ECOSYSTEM, DALY, AIR_H,WATER_H, AIR_E,WATER_E,BIODIVERSITY)
qqplot(EPI,ENVHEALTH)
qqplot(EPI, ECOSYSTEM)
qqplot(EPI, AIR_H)
qqplot(EPI,WATER_H)
qqplot(EPI, AIR_E)
qqplot(EPI,WATER_E)
qqplot(EPI,BIODIVERSITY)
help(distributions)
qqplot(EPI,ENVHEALTH)
qqplot(EPI, ECOSYSTEM)
qqplot(EPI, AIR_H)
qqplot(EPI,WATER_H)
qqplot(EPI, AIR_E)
qqplot(EPI,WATER_E)
qqplot(EPI,BIODIVERSITY)
help(distributions)
boxplot(EPI,ENVHEALTH, ECOSYSTEM, DALY, AIR_H,WATER_H, AIR_E,WATER_E,BIODIVERSITY)
qqplot(EPI,ENVHEALTH)
qqplot(EPI, ECOSYSTEM)
qqplot(EPI, AIR_H)
qqplot(EPI,WATER_H)
qqplot(EPI, AIR_E)
qqplot(EPI,WATER_E)
qqplot(EPI,BIODIVERSITY)
help(distributions)
hist(EPI, seq(30.,95., 1.0), prob=TRUE)
source("C:/Users/nilan/OneDrive - Rensselaer Polytechnic Institute/RPI/My Acadamic/Data Analaytics/DataAnalytics2023_Neelanga_Thelasingha/lab1/lab1_EPI.R")
shapiro.test(EPI_data$EPI)
shapiro.test(EPI)
shapiro.test(DALY)
summary(DALY)
fivenum(DALY,na.rm=TRUE)
source("C:/Users/nilan/OneDrive - Rensselaer Polytechnic Institute/RPI/My Acadamic/Data Analaytics/DataAnalytics2023_Neelanga_Thelasingha/lab1/lab1_EPI.R")
source("C:/Users/nilan/OneDrive - Rensselaer Polytechnic Institute/RPI/My Acadamic/Data Analaytics/DataAnalytics2023_Neelanga_Thelasingha/lab1/lab1_EPI.R")
setwd("C:/Users/nilan/OneDrive - Rensselaer Polytechnic Institute/RPI/My Acadamic/Data Analaytics/DataAnalytics2023_Neelanga_Thelasingha/lab1/GRUMP/")
#EPI_data<-read.csv("2010EPI_data.csv",header=T)
GMP_data<-read.csv("GPW3_GRUMP_SummaryInformation_2010.csv",header=T,skip = 1)
#or
#EPI_data <- read.xlsx(”<path>/2010EPI_data.xlsx")
# Note: replace default data frame name – cannot start with numbers!
View(GMP_data)
EPI_data<-read.csv("2010EPI_data.csv",header=T)
#GMP_data<-read.csv("GPW3_GRUMP_SummaryInformation_2010.csv",header=T,skip = 1)
#or
#EPI_data <- read.xlsx(”<path>/2010EPI_data.xlsx")
# Note: replace default data frame name – cannot start with numbers!
View(GMP_data)
EPI_data<-read.csv("2010EPI_data.csv",header=T)
GMP_data<-read.csv("2010EPI_data.csv",header=T)
#GMP_data<-read.csv("GPW3_GRUMP_SummaryInformation_2010.csv",header=T,skip = 1)
#or
#EPI_data <- read.xlsx(”<path>/2010EPI_data.xlsx")
# Note: replace default data frame name – cannot start with numbers!
View(GMP_data)
setwd("C:/Users/nilan/OneDrive - Rensselaer Polytechnic Institute/RPI/My Acadamic/Data Analaytics/DataAnalytics2023_Neelanga_Thelasingha/lab1/GRUMP/")
GMP_data<-read.csv("GPW3_GRUMP_SummaryInformation_2010.csv",header=T)
#GMP_data<-read.csv("GPW3_GRUMP_SummaryInformation_2010.csv",header=T,skip = 1)
#or
#EPI_data <- read.xlsx(”<path>/2010EPI_data.xlsx")
# Note: replace default data frame name – cannot start with numbers!
View(GMP_data)
#
attach(GMP_data) 	# sets the ‘default’ object
#
detach(EPI_data)
attach(GMP_data) 	# sets the ‘default’ object
#
detach(EPI_data)
attach(GMP_data) 	# sets the ‘default’ object
#
detach(EPI_data)
#
detach(EPI_data)
EPI
setwd("C:/Users/nilan/OneDrive - Rensselaer Polytechnic Institute/RPI/My Acadamic/Data Analaytics/DataAnalytics2023_Neelanga_Thelasingha/lab1/GRUMP/")
GMP_data<-read.csv("GPW3_GRUMP_SummaryInformation_2010.csv",header=T)
View(EPI_data)
View(EPI_data)
setwd("C:/Users/nilan/OneDrive - Rensselaer Polytechnic Institute/RPI/My Acadamic/Data Analaytics/DataAnalytics2023_Neelanga_Thelasingha/lab1/GRUMP/")
GMP_data<-read.csv("GPW3_GRUMP_SummaryInformation_2010.csv",header=T)
#GMP_data<-read.csv("GPW3_GRUMP_SummaryInformation_2010.csv",header=T,skip = 1)
#or
#EPI_data <- read.xlsx(”<path>/2010EPI_data.xlsx")
# Note: replace default data frame name – cannot start with numbers!
View(GMP_data)
#
#detach(EPI_data)
attach(GMP_data) 	# sets the ‘default’ object
fix(GMP_data) 	# launches a simple data editor
#GMP_data<-read.csv("GPW3_GRUMP_SummaryInformation_2010.csv",header=T,skip = 1)
#or
#EPI_data <- read.xlsx(”<path>/2010EPI_data.xlsx")
# Note: replace default data frame name – cannot start with numbers!
View(GMP_data)
#GMP_data<-read.csv("GPW3_GRUMP_SummaryInformation_2010.csv",header=T,skip = 1)
#or
#EPI_data <- read.xlsx(”<path>/2010EPI_data.xlsx")
# Note: replace default data frame name – cannot start with numbers!
View(GMP_data)
#GMP_data<-read.csv("GPW3_GRUMP_SummaryInformation_2010.csv",header=T,skip = 1)
#or
#EPI_data <- read.xlsx(”<path>/2010EPI_data.xlsx")
# Note: replace default data frame name – cannot start with numbers!
View(GMP_data)
#
#detach(EPI_data)
attach(GMP_data) 	# sets the ‘default’ object
setwd("C:/Users/nilan/OneDrive - Rensselaer Polytechnic Institute/RPI/My Acadamic/Data Analaytics/DataAnalytics2023_Neelanga_Thelasingha/lab1/GRUMP/")
PopulationPerUnit 			# prints out values EPI_data$EPI
tf <- is.na(PopulationPerUnit) # records True values if the value is NA
PPU <- PopulationPerUnit[!tf] # filters out NA values, new array
View(PPU)
summary(PopulationPerUnit) 	# stats
fivenum(PopulationPerUnit,na.rm=TRUE)
stem(PopulationPerUnit)		 # stem and leaf plot
hist(PopulationPerUnit)
hist(PopulationPerUnit, seq(30., 95., 1.0), prob=TRUE)
hist(PopulationPerUnit, seq(0., 3000., 100.0), prob=TRUE)
help(lines)
help(lines)
lines(density(PopulationPerUnit,na.rm=TRUE,bw=1.)) # or try bw=“SJ”
help(rug)
rug(PopulationPerUnit)
#trying with different range
hist(PopulationPerUnit, seq(0., 1000., 100.0), prob=TRUE)
help(lines)
lines(density(PopulationPerUnit,na.rm=TRUE,bw=1.)) # or try bw=“SJ”
#trying with different range
hist(PopulationPerUnit, seq(0., 1000., 100.0), prob=TRUE)
#Cumulative Density Function
plot(ecdf(PopulationPerUnit), do.points=FALSE, verticals=TRUE)
#Quantile-Quantile?
par(pty="s")
#Quantile-Quantile?
par(pty="s")
qqnorm(PopulationPerUnit); qqline(PopulationPerUnit)
#Simulated data from t-distribution:
x <- rt(250, df = 5)
qqnorm(x); qqline(x)
#Make a Q-Q plot against the generating distribution by: x<-seq(30,95,1)
qqplot(qt(ppoints(250), df = 5), x, xlab = "Q-Q plot for t dsn")
qqline(x)
boxplot(Area,PopulationPerUnit)
Area
PopulationPerUnit
Area<-as.numeric(Area)
boxplot(Area,PopulationPerUnit)
boxplot(PopulationPerUnit)
boxplot(Area)
Area<-as.numeric(Area)
boxplot(Area,PopulationPerUnit)
boxplot(PopulationPerUnit)
boxplot(Area)
qqplot(Area,PopulationPerUnit)
shapiro.test(Area)
shapiro.test(PopulationPerUnit)
summary(Area)
fivenum(Area,na.rm=TRUE)
summary(PopulationPerUnit)
fivenum(PopulationPerUnit,na.rm=TRUE)
setwd("C:/Users/nilan/OneDrive - Rensselaer Polytechnic Institute/RPI/My Acadamic/Data Analaytics/DataAnalytics2023_Neelanga_Thelasingha/lab1/w_treat/")
wtrt_data<-read.csv("water_treatment.csv",header=T)
#GMP_data<-read.csv("GPW3_GRUMP_SummaryInformation_2010.csv",header=T,skip = 1)
#or
#EPI_data <- read.xlsx(”<path>/2010EPI_data.xlsx")
# Note: replace default data frame name – cannot start with numbers!
View(wtrt_data)
#
#detach(EPI_data)
attach(wtrt_data) 	# sets the ‘default’ object
fix(wtrt_data) 	# launches a simple data editor
PH-E			# prints out values EPI_data$EPI
PH-E			# prints out values
PH-E			# prints out values
tf <- is.na(PH-E) # records True values if the value is NA
PHE <- PH-E[!tf] # filters out NA values, new array
View(PHE)
PHE <- PH-E[!tf] # filters out NA values, new array
PH-E			# prints out values
$PH-E			# prints out values
wtrt_data$PH-E			# prints out values
#replace hypehn with underscores in headers
names(wtrt_data) <- gsub("-", "_", names(wtrt_data))
wtrt_data
wtrt_data<-read.csv("water_treatment.csv",header=T)
#GMP_data<-read.csv("GPW3_GRUMP_SummaryInformation_2010.csv",header=T,skip = 1)
#or
#EPI_data <- read.xlsx(”<path>/2010EPI_data.xlsx")
# Note: replace default data frame name – cannot start with numbers!
View(wtrt_data)
setwd("C:/Users/nilan/OneDrive - Rensselaer Polytechnic Institute/RPI/My Acadamic/Data Analaytics/DataAnalytics2023_Neelanga_Thelasingha/lab1/w_treat/")
wtrt_data<-read.csv("water_treatment.csv",header=T)
#GMP_data<-read.csv("GPW3_GRUMP_SummaryInformation_2010.csv",header=T,skip = 1)
#or
#EPI_data <- read.xlsx(”<path>/2010EPI_data.xlsx")
# Note: replace default data frame name – cannot start with numbers!
View(wtrt_data)
#
#detach(EPI_data)
attach(wtrt_data) 	# sets the ‘default’ object
fix(wtrt_data) 	# launches a simple data editor
PH.E			# prints out values
PH.E			# prints out values
tf <- is.na(PH.E) # records True values if the value is NA
PHE <- PH.E[!tf] # filters out NA values, new array
summary(PHE) 	# stats
fivenum(PHE,na.rm=TRUE)
fivenum(PH.E,na.rm=TRUE)
help(stem)
stem(PH.E)		 # stem and leaf plot
hist(PH.E)
hist(PH.E, seq(6., 9, 0.2), prob=TRUE)
hist(PH.E, seq(7., 9, 0.2), prob=TRUE)
hist(PH.E, seq(6.5., 9, 0.2), prob=TRUE)
hist(PH.E, seq(6.5, 9, 0.2), prob=TRUE)
hist(PH.E, seq(6.5, 9, 0.5), prob=TRUE)
hist(PH.E, seq(6.5, 9, 0.1), prob=TRUE)
hist(PH.E, seq(6.5, 9, 0.05), prob=TRUE)
hist(PH.E, seq(6.5, 9, 0.1), prob=TRUE)
lines(density(PH.E,na.rm=TRUE,bw=1.)) # or try bw=“SJ”
rug(PH.E)
lines(density(PH.E,na.rm=TRUE,bw="SJ")) # or try bw=“SJ”
help(rug)
rug(PH.E)
#Cumulative Density Function
plot(ecdf(PH.E), do.points=FALSE, verticals=TRUE)
#Quantile-Quantile?
par(pty="s")
#Quantile-Quantile?
par(pty="s")
qqnorm(PH.E); qqline(PH.E)
#Simulated data from t-distribution:
x <- rt(250, df = 5)
qqnorm(x); qqline(x)
#Make a Q-Q plot against the generating distribution by: x<-seq(30,95,1)
qqplot(qt(ppoints(250), df = 5), x, xlab = "Q-Q plot for t dsn")
qqline(x)
boxplot(SED.E,PH.E)
Area<-as.numeric(SED.E)
boxplot(SED.E,PH.E)
SED.E
SED<-as.numeric(SED.E)
SED
boxplot(SED,PH.E)
SED<-as.numeric(SED.E)
COND<-as.numeric(COND.E)
boxplot(SED,COND)
boxplot(COND)
boxplot(SED)
boxplot(COND)
boxplot(SED)
qqplot(SED,COND)
shapiro.test(SED)
shapiro.test(COND)
summary(SED)
fivenum(COND,na.rm=TRUE)
